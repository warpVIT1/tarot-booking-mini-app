// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π —Ä–æ–ª–µ–π
const CONFIG = {
    // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    APP_NAME: 'Tarot Booking',
    VERSION: '1.0.0',

    // Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    BOT_USERNAME: 'Green_tarot_bot',

    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –∫–ª–∏–µ–Ω—Ç—ã
    DEFAULT_ROLE: 'client',

    // –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–æ–ª—å (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
    FORCE_ROLE: null,

    // API endpoints
    API_BASE_URL: 'https://your-api.com/api',

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    AUTO_REGISTRATION: true,
    SKIP_ROLE_SELECTION: true,

    // –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–ª—é—á–∏
    STORAGE_KEYS: {
        USER_DATA: 'tarot_user_data',
        TIME_SLOTS: 'tarot_time_slots',
        BOOKINGS: 'tarot_bookings',
        REFERRALS: 'tarot_referrals',
        SETTINGS: 'tarot_settings',
        SESSION_DATA: 'tarot_session',
        LANGUAGE_OVERRIDE: 'tarot_language_override',
        THEME_OVERRIDE: 'tarot_theme_override',
        TAROT_CLIENTS: 'tarot_clients' // –î–ª—è —Å–≤—è–∑–∏ —Ç–∞—Ä–æ–ª–æ–≥–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏
    },

    // –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    USER_ROLES: {
        CLIENT: 'client',
        TAROT: 'tarot',
        ADMIN: 'admin'
    },

    // –°—Ç–∞—Ç—É—Å—ã –∑–∞–ø–∏—Å–µ–π
    BOOKING_STATUS: {
        PENDING: 'pending',
        CONFIRMED: 'confirmed',
        CANCELLED: 'cancelled',
        COMPLETED: 'completed'
    },

    // –°—Ç–∞—Ç—É—Å—ã –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
    SLOT_STATUS: {
        AVAILABLE: 'available',
        PENDING: 'pending',
        BOOKED: 'booked'
    },

    // –¢–∏–ø—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
    CONSULTATION_TYPES: {
        ONLINE: 'online',
        OFFLINE: 'offline'
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
    TIME_SETTINGS: {
        DEFAULT_DURATION: 60,
        MIN_BOOKING_HOURS: 1,
        MAX_BOOKING_DAYS: 30,
        WORKING_HOURS: {
            START: '09:00',
            END: '21:00'
        },
        AUTO_CLEANUP_EXPIRED: true,
        CLEANUP_INTERVAL: 30 * 60 * 1000
    },

    // –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (–ù–ï –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π, –∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ç–∞—Ä–æ–ª–æ–≥—É)
    TAROT_BOOKING_SYSTEM: {
        ENABLED: true,
        ALLOW_MULTIPLE_TAROTS: true, // –ú–æ–∂–µ—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∫ —Ä–∞–∑–Ω—ã–º —Ç–∞—Ä–æ–ª–æ–≥–∞–º
        CONFLICT_CHECK: true, // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–∏
        SWITCH_TAROT_CONFIRMATION: true // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–∞—Ä–æ–ª–æ–≥–∞
    },

    // –¶–µ–Ω—ã –∏ —É—Å–ª—É–≥–∏
    SERVICES: {
        DEFAULT_PRICE: 2000,
        MIN_PRICE: 500,
        MAX_PRICE: 10000
    },

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    NOTIFICATIONS: {
        ENABLED: true,
        BOOKING_REMINDER_HOURS: 2,
        AUTO_CONFIRM_TIMEOUT: 24,
        SOUND_ENABLED: false
    },

    // Telegram Web App –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    TELEGRAM: {
        REQUIRED: true,
        EXPAND_ON_LOAD: true,
        ENABLE_CLOSING_CONFIRMATION: true,
        USE_HAPTIC_FEEDBACK: true,
        THEME_SYNC: true // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º–æ–π
    },

    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    SECURITY: {
        ADMIN_ACCESS_CODES: ['admin2024', 'tarot_admin', 'secure_access'],
        SESSION_TIMEOUT: 24 * 60 * 60 * 1000,
        AUTO_LOGOUT_INACTIVE: 7 * 24 * 60 * 60 * 1000,
        REQUIRE_TELEGRAM_AUTH: true
    },

    // –î–µ–±–∞–≥ —Ä–µ–∂–∏–º
    DEBUG: true,
    DEV_MODE: true,

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    DEV_USER: {
        id: 12345678,
        first_name: '–¢–µ—Å—Ç–æ–≤—ã–π',
        last_name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        username: 'test_user',
        language_code: 'ru'
    },

    // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–æ–Ω—ã
    TIMEZONE: 'Europe/Kiev',

    // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    PERFORMANCE: {
        AUTO_SAVE_INTERVAL: 10000,
        MAX_BOOKINGS_DISPLAY: 50,
        LAZY_LOAD_ENABLED: true,
        CACHE_DURATION: 5 * 60 * 1000
    }
};

// –£—Ç–∏–ª–∏—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —è–∑—ã–∫–∞ –∏ —Ç–µ–º—ã
const ConfigUtils = {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    init() {
        this.validateConfig();
        this.detectAndSetLanguage();
        this.detectAndSetTheme();
        this.log('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    },

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –ø–æ —Å–∏—Å—Ç–µ–º–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
    detectAndSetLanguage() {
        let detectedLanguage = 'ru'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä—É—Å—Å–∫–∏–π

        try {
            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            const savedLanguage = localStorage.getItem(CONFIG.STORAGE_KEYS.LANGUAGE_OVERRIDE);
            if (savedLanguage) {
                detectedLanguage = savedLanguage;
                this.log('üåê –Ø–∑—ã–∫ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', detectedLanguage);
                this.setLanguage(detectedLanguage);
                return;
            }

            // 2. –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (–±—Ä–∞—É–∑–µ—Ä)
            const systemLanguage = navigator.language || navigator.userLanguage;
            if (systemLanguage) {
                const lang = systemLanguage.toLowerCase();
                if (lang.startsWith('en')) {
                    detectedLanguage = 'en';
                } else if (lang.startsWith('uk')) {
                    detectedLanguage = 'uk';
                } else if (lang.startsWith('ru')) {
                    detectedLanguage = 'ru';
                }
                this.log('üåê –Ø–∑—ã–∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ —Å–∏—Å—Ç–µ–º–µ:', detectedLanguage, '(—Å–∏—Å—Ç–µ–º–Ω—ã–π:', systemLanguage + ')');
            }

            // 3. Fallback - –ø—Ä–æ–≤–µ—Ä—è–µ–º Telegram (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            if (this.isTelegramApp()) {
                const tg = window.Telegram.WebApp;
                const telegramUser = tg.initDataUnsafe?.user;

                if (telegramUser?.language_code && detectedLanguage === 'ru') {
                    const telegramLang = telegramUser.language_code.toLowerCase();
                    if (telegramLang.startsWith('en')) {
                        detectedLanguage = 'en';
                    } else if (telegramLang.startsWith('uk')) {
                        detectedLanguage = 'uk';
                    }
                    this.log('üåê –Ø–∑—ã–∫ —É—Ç–æ—á–Ω–µ–Ω –∏–∑ Telegram:', detectedLanguage);
                }
            }

        } catch (error) {
            this.error('–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞:', error);
        }

        this.setLanguage(detectedLanguage);
        this.log('üåê –§–∏–Ω–∞–ª—å–Ω—ã–π —è–∑—ã–∫:', detectedLanguage);
    },

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–º—ã –ø–æ —Å–∏—Å—Ç–µ–º–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
    detectAndSetTheme() {
        let detectedTheme = 'light'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–≤–µ—Ç–ª–∞—è

        try {
            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            const savedTheme = localStorage.getItem(CONFIG.STORAGE_KEYS.THEME_OVERRIDE);
            if (savedTheme && savedTheme !== 'auto') {
                detectedTheme = savedTheme;
                this.log('üé® –¢–µ–º–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', detectedTheme);
                this.setTheme(detectedTheme);
                return;
            }

            // 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ —Å–∏—Å—Ç–µ–º–Ω–æ–π —Ç–µ–º–µ
            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                detectedTheme = 'dark';
                this.log('üé® –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞ —Å–∏—Å—Ç–µ–º—ã');
            } else {
                detectedTheme = 'light';
                this.log('üé® –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ —Å–∏—Å—Ç–µ–º—ã');
            }

            // 3. Fallback - –ø—Ä–æ–≤–µ—Ä—è–µ–º Telegram (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            if (this.isTelegramApp() && CONFIG.TELEGRAM.THEME_SYNC) {
                const tg = window.Telegram.WebApp;
                if (tg.colorScheme) {
                    detectedTheme = tg.colorScheme;
                    this.log('üé® –¢–µ–º–∞ –∏–∑ Telegram:', detectedTheme);
                }
            }

        } catch (error) {
            this.error('–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º—ã:', error);
        }

        this.setTheme(detectedTheme);
        this.log('üé® –§–∏–Ω–∞–ª—å–Ω–∞—è —Ç–µ–º–∞:', detectedTheme);
    },

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫
    setLanguage(language) {
        const supportedLanguages = ['ru', 'en', 'uk'];

        if (!supportedLanguages.includes(language)) {
            this.error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫:', language);
            return false;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º HTML –∞—Ç—Ä–∏–±—É—Ç—ã
        document.documentElement.lang = language;
        document.body.setAttribute('lang', language);

        this.log('üåê –Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', language);
        return true;
    },

    // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–º—É
    setTheme(theme) {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã —Ç–µ–º—ã
        document.body.classList.remove('light-theme', 'dark-theme');

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É
        if (theme === 'dark') {
            document.body.classList.add('dark-theme');
        } else {
            document.body.classList.add('light-theme');
        }

        this.log('üé® –¢–µ–º–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:', theme);
        return true;
    },

    // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É
    toggleTheme() {
        const isDark = document.body.classList.contains('dark-theme');
        const newTheme = isDark ? 'light' : 'dark';

        this.setTheme(newTheme);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        localStorage.setItem(CONFIG.STORAGE_KEYS.THEME_OVERRIDE, newTheme);

        this.log('üé® –¢–µ–º–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞:', newTheme);
        return newTheme;
    },

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    saveLanguageChoice(language) {
        localStorage.setItem(CONFIG.STORAGE_KEYS.LANGUAGE_OVERRIDE, language);
        this.setLanguage(language);
        this.log('üåê –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', language);
    },

    // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    determineUserRole(telegramData) {
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Ä–æ–ª—å —Ç–∞—Ä–æ–ª–æ–≥–∞
        const savedUser = localStorage.getItem(CONFIG.STORAGE_KEYS.USER_DATA);
        if (savedUser) {
            try {
                const userData = JSON.parse(savedUser);
                if (userData.role === CONFIG.USER_ROLES.TAROT) {
                    this.log('üé≠ –ù–∞–π–¥–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥');
                    return CONFIG.USER_ROLES.TAROT;
                }
            } catch (error) {
                this.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            }
        }

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º start_param –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ç–∞—Ä–æ–ª–æ–≥—É
        if (telegramData?.start_param?.startsWith('tarot_')) {
            this.log('üé≠ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ —Ç–∞—Ä–æ–ª–æ–≥—É');
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–∞—Ä–æ–ª–æ–≥–µ
            const tarotId = telegramData.start_param.replace('tarot_', '');
            this.saveSelectedTarot(tarotId);
        }

        // 3. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –∫–ª–∏–µ–Ω—Ç—ã
        this.log('üé≠ –ù–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å –∫–ª–∏–µ–Ω—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)');
        return CONFIG.USER_ROLES.CLIENT;
    },

    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–æ–ª–æ–≥–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
    saveSelectedTarot(tarotId) {
        const selectedTarots = this.getSelectedTarots();
        if (!selectedTarots.includes(tarotId)) {
            selectedTarots.push(tarotId);
            localStorage.setItem('selected_tarots', JSON.stringify(selectedTarots));
            this.log('üîó –°–æ—Ö—Ä–∞–Ω–µ–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥:', tarotId);
        }
    },

    // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–∞—Ä–æ–ª–æ–≥–æ–≤
    getSelectedTarots() {
        try {
            const saved = localStorage.getItem('selected_tarots');
            return saved ? JSON.parse(saved) : [];
        } catch (error) {
            this.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–∞—Ä–æ–ª–æ–≥–æ–≤:', error);
            return [];
        }
    },

    // –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ —Ç–∞—Ä–æ–ª–æ–≥—É
    createTarotBookingLink(tarotId) {
        return `https://t.me/${CONFIG.BOT_USERNAME}?start=tarot_${tarotId}`;
    },

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    validateConfig() {
        if (!CONFIG.BOT_USERNAME) {
            this.error('BOT_USERNAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        }

        if (CONFIG.TELEGRAM.REQUIRED && !this.isTelegramApp()) {
            this.log('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Telegram');
        }
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
    isTelegramApp() {
        return window.Telegram && window.Telegram.WebApp && window.Telegram.WebApp.initData;
    },

    // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    getStorageSize() {
        let total = 0;
        Object.values(CONFIG.STORAGE_KEYS).forEach(key => {
            const item = localStorage.getItem(key);
            if (item) {
                total += item.length;
            }
        });
        return total;
    },

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    log(...args) {
        if (CONFIG.DEBUG) {
            console.log('[Tarot App]:', new Date().toLocaleTimeString(), ...args);
        }
    },

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    error(...args) {
        console.error('[Tarot App Error]:', new Date().toLocaleTimeString(), ...args);
    }
};

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (typeof window !== 'undefined') {
    window.CONFIG = CONFIG;
    window.ConfigUtils = ConfigUtils;

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => ConfigUtils.init());
    } else {
        ConfigUtils.init();
    }
}