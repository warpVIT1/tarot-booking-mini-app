// –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
const App = {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    state: {
        initialized: false,
        currentScreen: 'loading',
        user: null,
        role: null,
        selectedTarot: null
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    async init() {
        ConfigUtils.log('üöÄ –ó–∞–ø—É—Å–∫ Tarot Booking App v' + CONFIG.VERSION);

        try {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
            this.showLoadingScreen();

            // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è UX
            await this.delay(1000);

            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                if (!this.state.initialized) {
                    ConfigUtils.log('‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
                    this.forceShowMainApp();
                }
            }, 4000);

            // –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            await this.tryInitialization();

        } catch (error) {
            ConfigUtils.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.forceShowMainApp();
        }
    },

    // –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    async tryInitialization() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (—è–∑—ã–∫, —Ç–µ–º–∞)
            ConfigUtils.init();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
            TelegramApp.init();

            // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram
            await this.delay(500);

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —Ö—Ä–∞–Ω–µ–Ω–∏—è
            this.initStorage();

            // –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            const authResult = this.tryAuth();

            // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞
            if (authResult) {
                this.state.user = AuthSystem.getCurrentUser();
                this.state.role = this.state.user?.role;
                ConfigUtils.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:', this.state.user?.firstName, '—Ä–æ–ª—å:', this.state.role);
            } else {
                // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                ConfigUtils.log('‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                this.createTestUser();
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–æ–ª–æ–≥–∞
            this.checkSelectedTarot();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            await this.delay(500);
            this.showMainApp();

            this.state.initialized = true;
            ConfigUtils.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ø—ã—Ç–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.forceShowMainApp();
        }
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–æ–ª–æ–≥–∞
    checkSelectedTarot() {
        if (this.state.user && this.state.user.selectedTarot) {
            this.state.selectedTarot = this.state.user.selectedTarot;
            ConfigUtils.log('üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∞—Ä–æ–ª–æ–≥:', this.state.selectedTarot);
        }
    },

    // –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    tryAuth() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram Web App
            if (ConfigUtils.isTelegramApp()) {
                const authResult = AuthSystem.init();
                if (authResult) {
                    return true;
                }
            }

            // Fallback - —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            return false;

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
            return false;
        }
    },

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    createTestUser() {
        try {
            // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ - –∫–ª–∏–µ–Ω—Ç—ã
            const role = CONFIG.USER_ROLES.CLIENT;

            const testUser = {
                id: Date.now(),
                telegramId: Date.now(),
                firstName: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
                lastName: '',
                username: 'test_user',
                role: role,
                languageCode: 'ru',
                isPremium: false,
                photoUrl: '',
                registeredAt: new Date().toISOString(),
                selectedTarot: this.state.selectedTarot
            };

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            AuthSystem.currentUser = testUser;
            Storage.set(CONFIG.STORAGE_KEYS.USER_DATA, testUser);

            this.state.user = testUser;
            this.state.role = role;

            ConfigUtils.log('üîß –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', testUser);
            return true;

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
            return false;
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
    showLoadingScreen() {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
            loadingScreen.classList.add('active');
            this.updateLoadingMessage();
        }
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    updateLoadingMessage() {
        const loadingText = document.querySelector('#loading-screen p');
        if (loadingText) {
            const messages = [
                '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram...',
                '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏ —Ç–µ–º—ã...',
                '–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...',
                '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...',
                '–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ...'
            ];

            let index = 0;
            const updateInterval = setInterval(() => {
                if (index < messages.length && !this.state.initialized) {
                    loadingText.textContent = messages[index];
                    index++;
                } else {
                    clearInterval(updateInterval);
                }
            }, 600);
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    showMainApp() {
        try {
            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
            const loadingScreen = document.getElementById('loading-screen');
            if (loadingScreen) {
                loadingScreen.classList.remove('active');
                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
                setTimeout(() => {
                    loadingScreen.style.display = 'none';
                }, 500);
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            const mainApp = document.getElementById('main-app');
            if (mainApp) {
                mainApp.classList.add('active');
                mainApp.style.display = 'block';
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.updateUserInterface();

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            this.setupNavigation();

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            this.initRoleBasedModules();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–∞—Ä–æ–ª–æ–≥–µ –µ—Å–ª–∏ –µ—Å—Ç—å
            this.showSelectedTarotInfo();

            ConfigUtils.log('üéâ –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–∞—Ä–æ–ª–æ–≥–µ
    showSelectedTarotInfo() {
        if (this.state.selectedTarot && this.state.role === CONFIG.USER_ROLES.CLIENT) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–∞—Ä–æ–ª–æ–≥–µ
            setTimeout(() => {
                const tarotsList = Storage.get('tarots_list') || [];
                const tarot = tarotsList.find(t => t.id.toString() === this.state.selectedTarot.toString());

                if (tarot) {
                    Components.showNotification(
                        `–í—ã –ø–µ—Ä–µ—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫ —Ç–∞—Ä–æ–ª–æ–≥—É ${tarot.tarotData.displayName}`,
                        'info'
                    );
                }
            }, 2000);
        }
    },

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∫–∞–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    forceShowMainApp() {
        try {
            ConfigUtils.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø');

            // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if (!this.state.user) {
                this.createTestUser();
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            this.showMainApp();

            this.state.initialized = true;

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:', error);

            // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π fallback - –ø–æ–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã –±–∞–∑–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            document.body.innerHTML = `
                <div style="padding: 20px; text-align: center; background: var(--bg-color); color: var(--text-color); min-height: 100vh;">
                    <h1>üîÆ Tarot Booking</h1>
                    <p>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ä–µ–∂–∏–º–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è</p>
                    <button onclick="window.location.reload()" style="
                        background: var(--primary-color);
                        color: white;
                        border: none;
                        padding: 15px 30px;
                        border-radius: 10px;
                        font-size: 16px;
                        margin-top: 20px;
                        cursor: pointer;
                    ">
                        üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
                    </button>
                </div>
            `;
        }
    },

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUserInterface() {
        try {
            const user = this.state.user;
            if (!user) return;

            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
            const avatarEl = document.getElementById('user-avatar');
            if (avatarEl) {
                const initials = this.getInitials(user.firstName, user.lastName);
                avatarEl.textContent = initials;
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è
            const nameEl = document.getElementById('user-name');
            if (nameEl) {
                nameEl.textContent = user.firstName + (user.lastName ? ' ' + user.lastName : '');
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å
            const contactEl = document.getElementById('user-contact');
            if (contactEl) {
                const roleText = user.role === CONFIG.USER_ROLES.CLIENT ? '–ö–ª–∏–µ–Ω—Ç' :
                               user.role === CONFIG.USER_ROLES.TAROT ? '–¢–∞—Ä–æ–ª–æ–≥' : '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
                contactEl.textContent = roleText;
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
            this.updateThemeToggle();

            ConfigUtils.log('üë§ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω');

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:', error);
        }
    },

    // –û–±–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
    updateThemeToggle() {
        const themeButtons = document.querySelectorAll('.theme-toggle');
        themeButtons.forEach(btn => {
            const isDark = document.body.classList.contains('dark-theme');
            const icon = isDark ? '‚òÄÔ∏è' : 'üåô';
            const text = isDark ? '–°–≤–µ—Ç–ª–∞—è' : '–¢–µ–º–Ω–∞—è';
            btn.innerHTML = `${icon} ${text}`;
        });
    },

    // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª—ã
    getInitials(firstName, lastName) {
        const first = firstName ? firstName.charAt(0).toUpperCase() : '';
        const last = lastName ? lastName.charAt(0).toUpperCase() : '';
        return first + last || 'üë§';
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigation() {
        try {
            const navButtons = document.querySelectorAll('.nav-btn');

            navButtons.forEach(btn => {
                btn.addEventListener('click', (e) => {
                    const tabName = e.currentTarget.dataset.tab;
                    this.switchTab(tabName);
                });
            });

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≤–∫–ª–∞–¥–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            this.showDefaultTab();

            ConfigUtils.log('üß≠ –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –≤–∫–ª–∞–¥–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    showDefaultTab() {
        const role = this.state.role;
        let defaultTab = 'booking'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é

        if (role === CONFIG.USER_ROLES.TAROT) {
            defaultTab = 'bookings'; // –î–ª—è —Ç–∞—Ä–æ–ª–æ–≥–æ–≤ - –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
        } else if (role === CONFIG.USER_ROLES.CLIENT) {
            defaultTab = 'booking'; // –î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ - –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
        }

        this.switchTab(defaultTab);
    },

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    switchTab(tabName) {
        try {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
            document.querySelectorAll('.nav-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));

            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é
            const navBtn = document.querySelector(`[data-tab="${tabName}"]`);
            const tabContent = document.getElementById(`${tabName}-tab`);

            if (navBtn) navBtn.classList.add('active');
            if (tabContent) tabContent.classList.add('active');

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
            this.loadTabContent(tabName);

            ConfigUtils.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É:', tabName);

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏:', error);
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
    loadTabContent(tabName) {
        try {
            switch (tabName) {
                case 'booking':
                    this.loadBookingContent();
                    break;
                case 'bookings':
                    this.loadBookingsContent();
                    break;
                case 'schedule':
                    this.loadScheduleContent();
                    break;
                case 'profile':
                    this.loadProfileContent();
                    break;
                case 'referral':
                    this.loadReferralContent();
                    break;
                default:
                    ConfigUtils.log('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞:', tabName);
            }
        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error);
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–ø–∏—Å–∏
    loadBookingContent() {
        if (this.state.role === CONFIG.USER_ROLES.CLIENT) {
            if (typeof BookingSystem !== 'undefined') {
                BookingSystem.init();
            }
        } else if (this.state.role === CONFIG.USER_ROLES.TAROT) {
            if (typeof AdminPanel !== 'undefined') {
                AdminPanel.init();
            }
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–ø–∏—Å–µ–π
    loadBookingsContent() {
        const container = document.getElementById('user-bookings') || document.getElementById('admin-bookings');
        if (!container) return;

        if (this.state.role === CONFIG.USER_ROLES.CLIENT) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞
            if (typeof BookingSystem !== 'undefined') {
                container.innerHTML = BookingSystem.showBookingHistory();
            }
        } else if (this.state.role === CONFIG.USER_ROLES.TAROT) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ —Ç–∞—Ä–æ–ª–æ–≥–∞
            if (typeof AdminPanel !== 'undefined') {
                AdminPanel.loadBookings();
            }
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    loadScheduleContent() {
        if (this.state.role === CONFIG.USER_ROLES.TAROT) {
            if (typeof AdminPanel !== 'undefined') {
                AdminPanel.setupTimeManagement();
            }
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
    loadProfileContent() {
        if (typeof ProfileManager !== 'undefined') {
            ProfileManager.init();
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–∞—Ä–æ–ª–æ–≥–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
        if (this.state.role === CONFIG.USER_ROLES.CLIENT) {
            setTimeout(() => {
                const profileContent = document.getElementById('profile-content');
                if (profileContent && !profileContent.querySelector('.tarot-registration-card')) {
                    const registrationButton = Components.createTarotRegistrationButton();
                    profileContent.insertAdjacentHTML('beforeend', registrationButton);
                }
            }, 1000);
        }
    },

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
    loadReferralContent() {
        if (typeof ReferralSystem !== 'undefined') {
            ReferralSystem.init();
        }
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π –ø–æ —Ä–æ–ª—è–º
    initRoleBasedModules() {
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—â–∏–µ –º–æ–¥—É–ª–∏
            if (typeof ProfileManager !== 'undefined') {
                ProfileManager.init();
            }

            if (typeof ReferralSystem !== 'undefined') {
                ReferralSystem.init();
            }

            // –ú–æ–¥—É–ª–∏ –ø–æ —Ä–æ–ª—è–º
            if (this.state.role === CONFIG.USER_ROLES.CLIENT) {
                if (typeof BookingSystem !== 'undefined') {
                    BookingSystem.init();
                }
                ConfigUtils.log('üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –º–æ–¥—É–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞');
            } else if (this.state.role === CONFIG.USER_ROLES.TAROT) {
                if (typeof AdminPanel !== 'undefined') {
                    AdminPanel.init();
                }
                ConfigUtils.log('üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –º–æ–¥—É–ª–∏ —Ç–∞—Ä–æ–ª–æ–≥–∞');
            }

            ConfigUtils.log('üì¶ –ú–æ–¥—É–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —Ä–æ–ª–∏:', this.state.role);

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π:', error);
        }
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    initStorage() {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å localStorage
            if (typeof Storage === 'undefined') {
                ConfigUtils.error('‚ùå Storage –º–æ–¥—É–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
                return;
            }

            // –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ
            this.cleanupStorage();

            const storageSize = ConfigUtils.getStorageSize();
            ConfigUtils.log(`üíæ –†–∞–∑–º–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: ${(storageSize / 1024).toFixed(1)} KB`);

        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:', error);
        }
    },

    // –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    cleanupStorage() {
        try {
            // –û—á–∏—â–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
            if (typeof TimeSlotStorage !== 'undefined') {
                TimeSlotStorage.cleanupExpired();
            }

            ConfigUtils.log('üßπ –û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        } catch (error) {
            ConfigUtils.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    },

    // –ó–∞–¥–µ—Ä–∂–∫–∞
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    },

    // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    getAppInfo() {
        return {
            name: CONFIG.APP_NAME,
            version: CONFIG.VERSION,
            user: this.state.user,
            role: this.state.role,
            selectedTarot: this.state.selectedTarot,
            initialized: this.state.initialized,
            telegramSupport: ConfigUtils.isTelegramApp(),
            theme: document.body.classList.contains('dark-theme') ? 'dark' : 'light',
            language: document.documentElement.lang || 'ru'
        };
    },

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    restart() {
        this.state.initialized = false;
        this.state.user = null;
        this.state.role = null;
        this.state.selectedTarot = null;

        ConfigUtils.log('üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        window.location.reload();
    },

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    handleError(error, context) {
        ConfigUtils.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${context}:`, error);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (typeof Components !== 'undefined') {
            Components.showNotification(
                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.',
                'error'
            );
        }
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.toggleTheme = () => {
    const newTheme = ConfigUtils.toggleTheme();
    App.updateThemeToggle();

    if (typeof TelegramApp !== 'undefined') {
        TelegramApp.hapticFeedback('selection');
    }

    ConfigUtils.log('üé® –¢–µ–º–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞ –Ω–∞:', newTheme);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç–∞—Ä–æ–ª–æ–≥–∞
window.openTarotRegistration = () => {
    window.location.href = 'tarot-register.html';
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.addEventListener('error', (event) => {
    App.handleError(event.error, 'Global Error Handler');
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ—Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', (event) => {
    App.handleError(event.reason, 'Unhandled Promise Rejection');
});

// –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    ConfigUtils.log('üìÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');

    // –£–±–∏—Ä–∞–µ–º –¥–µ–±–∞–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –Ω–µ –≤ –¥–µ–≤ —Ä–µ–∂–∏–º–µ
    if (!CONFIG.DEV_MODE) {
        const debugElements = document.querySelectorAll('.debug-info');
        debugElements.forEach(el => el.remove());
    }

    App.init();
});

// –≠–∫—Å–ø–æ—Ä—Ç
window.App = App;