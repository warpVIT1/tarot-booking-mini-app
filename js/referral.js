// –ú–æ–¥—É–ª—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
const ReferralSystem = {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init() {
        ConfigUtils.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã');
        this.loadReferralData();
    },

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
    loadReferralData() {
        const container = document.getElementById('referral-content');
        if (!container) {
            ConfigUtils.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä referral-content –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) {
            container.innerHTML = '<p>–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω</p>';
            return;
        }

        container.innerHTML = this.createReferralHTML(currentUser);
        ConfigUtils.log('–î–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    },

    // –°–æ–∑–¥–∞—Ç—å HTML —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    createReferralHTML(user) {
        const referralLink = this.getReferralLink(user.referralCode);
        const stats = ReferralStorage.getUserStats(user.id);
        const referrals = ReferralStorage.getUserReferrals(user.id);
        const bonuses = ReferralStorage.getUserBonuses(user.id);

        return `
            <div class="referral-container">
                <div class="referral-header">
                    <h2>üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</h2>
                    <p>–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!</p>
                </div>

                <div class="referral-card">
                    <h3>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</h3>
                    <div class="referral-link">
                        <code>${referralLink}</code>
                        <button class="copy-btn" onclick="ReferralSystem.copyReferralLink()">
                            üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                    </div>
                    <div class="referral-actions">
                        <button onclick="ReferralSystem.shareToTelegram()" class="action-btn">
                            üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
                        </button>
                        <button onclick="ReferralSystem.generateQR()" class="action-btn">
                            üì± QR-–∫–æ–¥
                        </button>
                    </div>
                </div>

                <div class="referral-stats">
                    <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-number">${stats.totalReferrals}</div>
                            <div class="stat-label">–í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">${stats.activeReferrals}</div>
                            <div class="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">${stats.totalBonus}‚ÇΩ</div>
                            <div class="stat-label">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number">${this.getNextBonusProgress(stats.totalReferrals)}%</div>
                            <div class="stat-label">–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞</div>
                        </div>
                    </div>
                </div>

                <div class="referral-rewards">
                    <h3>–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≥—Ä–∞–¥</h3>
                    <div class="rewards-list">
                        <div class="reward-item ${stats.totalReferrals >= 1 ? 'achieved' : 'pending'}">
                            <div class="reward-icon">${stats.totalReferrals >= 1 ? '‚úÖ' : '‚è≥'}</div>
                            <div class="reward-info">
                                <div class="reward-title">–ü–µ—Ä–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª</div>
                                <div class="reward-description">–ë–æ–Ω—É—Å 50‚ÇΩ –∑–∞ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ</div>
                            </div>
                        </div>

                        <div class="reward-item ${stats.totalReferrals >= 3 ? 'achieved' : 'pending'}">
                            <div class="reward-icon">${stats.totalReferrals >= 3 ? '‚úÖ' : '‚è≥'}</div>
                            <div class="reward-info">
                                <div class="reward-title">3 —Ä–µ—Ñ–µ—Ä–∞–ª–∞</div>
                                <div class="reward-description">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –±–æ–Ω—É—Å 100‚ÇΩ</div>
                            </div>
                        </div>

                        <div class="reward-item ${stats.totalReferrals >= 5 ? 'achieved' : 'pending'}">
                            <div class="reward-icon">${stats.totalReferrals >= 5 ? '‚úÖ' : '‚è≥'}</div>
                            <div class="reward-info">
                                <div class="reward-title">5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
                                <div class="reward-description">–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</div>
                            </div>
                        </div>

                        <div class="reward-item ${stats.totalReferrals >= 10 ? 'achieved' : 'pending'}">
                            <div class="reward-icon">${stats.totalReferrals >= 10 ? '‚úÖ' : '‚è≥'}</div>
                            <div class="reward-info">
                                <div class="reward-title">10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</div>
                                <div class="reward-description">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</div>
                            </div>
                        </div>
                    </div>
                </div>

                ${referrals.length > 0 ? `
                    <div class="referrals-list">
                        <h3>–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã (${referrals.length})</h3>
                        <div class="referrals-grid">
                            ${referrals.map(referral => this.createReferralItemHTML(referral)).join('')}
                        </div>
                    </div>
                ` : ''}

                ${bonuses.length > 0 ? `
                    <div class="bonuses-history">
                        <h3>–ò—Å—Ç–æ—Ä–∏—è –±–æ–Ω—É—Å–æ–≤</h3>
                        <div class="bonuses-list">
                            ${bonuses.map(bonus => this.createBonusItemHTML(bonus)).join('')}
                        </div>
                    </div>
                ` : ''}

                <div class="referral-info">
                    <h3>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
                    <div class="info-steps">
                        <div class="step-item">
                            <div class="step-number">1</div>
                            <div class="step-content">
                                <div class="step-title">–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π</div>
                                <div class="step-description">–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º</div>
                            </div>
                        </div>

                        <div class="step-item">
                            <div class="step-number">2</div>
                            <div class="step-content">
                                <div class="step-title">–î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è</div>
                                <div class="step-description">–í–∞—à –¥—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è</div>
                            </div>
                        </div>

                        <div class="step-item">
                            <div class="step-number">3</div>
                            <div class="step-content">
                                <div class="step-title">–ü–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å</div>
                                <div class="step-description">–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –±–æ–Ω—É—Å, –¥—Ä—É–≥ –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É –Ω–∞ –ø–µ—Ä–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
    },

    // –ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    getReferralLink(referralCode) {
        return ConfigUtils.getBotReferralLink(referralCode);
    },

    // –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    copyReferralLink() {
        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) return;

        const referralLink = this.getReferralLink(currentUser.referralCode);

        TelegramApp.copyToClipboard(referralLink);
        TelegramApp.showAlert('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!');
        Components.showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
        TelegramApp.hapticFeedback('success');

        ConfigUtils.log('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞');
    },

    // –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram
    shareToTelegram() {
        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) return;

        TelegramApp.shareReferralLink(currentUser.referralCode);
        TelegramApp.hapticFeedback('selection');

        ConfigUtils.log('–û—Ç–∫—Ä—ã—Ç–æ –æ–∫–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram');
    },

    // –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥
    generateQR() {
        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) return;

        const referralLink = this.getReferralLink(currentUser.referralCode);

        // –ü—Ä–æ—Å—Ç–æ–π QR-–∫–æ–¥ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å
        const qrUrl = `https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(referralLink)}`;

        const modal = Modal.create({
            title: 'QR-–∫–æ–¥ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏',
            content: `
                <div style="text-align: center;">
                    <img src="${qrUrl}" alt="QR-–∫–æ–¥" style="max-width: 100%; border-radius: 10px; margin: 20px 0;">
                    <p>–ü–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ –¥—Ä—É–∑—å—è–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ</p>
                    <div style="word-break: break-all; font-family: monospace; background: #f8f9fa; padding: 10px; border-radius: 5px; font-size: 0.9rem;">
                        ${referralLink}
                    </div>
                </div>
            `,
            buttons: [
                {
                    text: '–°–∫–∞—á–∞—Ç—å QR-–∫–æ–¥',
                    action: () => this.downloadQR(qrUrl),
                    primary: true
                },
                {
                    text: '–ó–∞–∫—Ä—ã—Ç—å',
                    action: () => Modal.close()
                }
            ]
        });

        Modal.show(modal);
        TelegramApp.hapticFeedback('success');
    },

    // –°–∫–∞—á–∞—Ç—å QR-–∫–æ–¥
    downloadQR(qrUrl) {
        const a = document.createElement('a');
        a.href = qrUrl;
        a.download = 'tarot_referral_qr.png';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);

        Components.showNotification('QR-–∫–æ–¥ —Å–∫–∞—á–∞–Ω', 'success');
    },

    // –°–æ–∑–¥–∞—Ç—å HTML —ç–ª–µ–º–µ–Ω—Ç–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    createReferralItemHTML(referral) {
        const referralUser = this.findUserById(referral.referralId);
        const userName = referralUser ?
            `${referralUser.firstName} ${referralUser.lastName || ''}`.trim() :
            `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${referral.referralId}`;

        const joinDate = new Date(referral.createdAt).toLocaleDateString('ru-RU');
        const statusIcon = referral.active ? '‚úÖ' : '‚è∏Ô∏è';
        const statusText = referral.active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω';

        return `
            <div class="referral-item ${referral.active ? 'active' : 'inactive'}">
                <div class="referral-avatar">
                    ${referralUser?.photoUrl ?
                        `<img src="${referralUser.photoUrl}" alt="–ê–≤–∞—Ç–∞—Ä">` :
                        `<div class="avatar-placeholder">${userName.charAt(0)}</div>`
                    }
                </div>
                <div class="referral-info">
                    <div class="referral-name">${userName}</div>
                    <div class="referral-date">–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è: ${joinDate}</div>
                    <div class="referral-status">
                        ${statusIcon} ${statusText}
                    </div>
                </div>
            </div>
        `;
    },

    // –°–æ–∑–¥–∞—Ç—å HTML —ç–ª–µ–º–µ–Ω—Ç–∞ –±–æ–Ω—É—Å–∞
    createBonusItemHTML(bonus) {
        const date = new Date(bonus.createdAt).toLocaleDateString('ru-RU');
        const amount = bonus.amount > 0 ? `+${bonus.amount}‚ÇΩ` : `${bonus.amount}‚ÇΩ`;

        return `
            <div class="bonus-item">
                <div class="bonus-icon">üí∞</div>
                <div class="bonus-info">
                    <div class="bonus-amount">${amount}</div>
                    <div class="bonus-reason">${bonus.reason}</div>
                    <div class="bonus-date">${date}</div>
                </div>
            </div>
        `;
    },

    // –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID (–∑–∞–≥–ª—É—à–∫–∞)
    findUserById(userId) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        // –ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        return {
            id: userId,
            firstName: '–†–µ—Ñ–µ—Ä–∞–ª',
            lastName: '',
            photoUrl: null
        };
    },

    // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –±–æ–Ω—É—Å–∞
    getNextBonusProgress(totalReferrals) {
        const milestones = [1, 3, 5, 10, 20, 50];

        for (let milestone of milestones) {
            if (totalReferrals < milestone) {
                return Math.round((totalReferrals / milestone) * 100);
            }
        }

        return 100; // –î–æ—Å—Ç–∏–≥–Ω—É—Ç—ã –≤—Å–µ —Ü–µ–ª–∏
    },

    // –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–∞
    addReferral(referrerId, referralId) {
        const referral = ReferralStorage.addReferral(referrerId, referralId);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        this.checkAchievements(referrerId);

        ConfigUtils.log('–î–æ–±–∞–≤–ª–µ–Ω —Ä–µ—Ñ–µ—Ä–∞–ª:', referral);
        return referral;
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    checkAchievements(userId) {
        const stats = ReferralStorage.getUserStats(userId);
        const achievements = [];

        // –ü–µ—Ä–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª
        if (stats.totalReferrals === 1) {
            const bonus = ReferralStorage.addBonus(userId, 50, '–ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞');
            achievements.push({ type: 'first_referral', bonus: 50 });
        }

        // 3 —Ä–µ—Ñ–µ—Ä–∞–ª–∞
        if (stats.totalReferrals === 3) {
            const bonus = ReferralStorage.addBonus(userId, 100, '–ë–æ–Ω—É—Å –∑–∞ 3 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
            achievements.push({ type: 'three_referrals', bonus: 100 });
        }

        // 5 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if (stats.totalReferrals === 5) {
            const bonus = ReferralStorage.addBonus(userId, 0, '–°–∫–∏–¥–∫–∞ 20% —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
            achievements.push({ type: 'five_referrals', reward: 'discount_20' });
        }

        // 10 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if (stats.totalReferrals === 10) {
            const bonus = ReferralStorage.addBonus(userId, 0, '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞');
            achievements.push({ type: 'ten_referrals', reward: 'free_consultation' });
        }

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö
        achievements.forEach(achievement => {
            this.showAchievementNotification(achievement);
        });

        return achievements;
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏
    showAchievementNotification(achievement) {
        let message = '';
        let icon = 'üéâ';

        switch (achievement.type) {
            case 'first_referral':
                message = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ ${achievement.bonus}‚ÇΩ –∑–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞!`;
                icon = 'üéÅ';
                break;
            case 'three_referrals':
                message = `–û—Ç–ª–∏—á–Ω–æ! –ë–æ–Ω—É—Å ${achievement.bonus}‚ÇΩ –∑–∞ 3 —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤!`;
                icon = 'üí∞';
                break;
            case 'five_referrals':
                message = '–°—É–ø–µ—Ä! –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ —Å–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏!';
                icon = 'üèÜ';
                break;
            case 'ten_referrals':
                message = '–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–æ! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!';
                icon = 'üëë';
                break;
        }

        TelegramApp.showPopup('–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!', `${icon} ${message}`);
        Components.showNotification(message, 'success');
        TelegramApp.hapticFeedback('success');
    },

    // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∫–∏–¥–∫—É
    applyReferralDiscount(userId, amount) {
        const stats = ReferralStorage.getUserStats(userId);
        let discount = 0;

        // –°–∫–∏–¥–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const currentUser = AuthSystem.getCurrentUser();
        if (currentUser && currentUser.referredBy) {
            discount = Math.round(amount * (CONFIG.REFERRAL_SETTINGS.REFERRAL_DISCOUNT / 100));
        }

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞ –∑–∞ 5+ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if (stats.totalReferrals >= 5) {
            discount = Math.max(discount, Math.round(amount * 0.20)); // 20% —Å–∫–∏–¥–∫–∞
        }

        return {
            originalAmount: amount,
            discount: discount,
            finalAmount: amount - discount,
            reason: discount > 0 ? '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∫–∏–¥–∫–∞' : null
        };
    },

    // –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–æ–Ω—É—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getAvailableBonuses(userId) {
        const bonuses = ReferralStorage.getUserBonuses(userId);
        const totalBonus = bonuses.reduce((sum, bonus) => sum + bonus.amount, 0);

        return {
            totalAmount: totalBonus,
            canUse: totalBonus > 0,
            bonuses: bonuses
        };
    },

    // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–Ω—É—Å—ã
    useBonuses(userId, amount) {
        const available = this.getAvailableBonuses(userId);

        if (!available.canUse || available.totalAmount <= 0) {
            return {
                success: false,
                message: '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤'
            };
        }

        const useAmount = Math.min(amount, available.totalAmount);

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –±–æ–Ω—É—Å–æ–≤
        ReferralStorage.addBonus(userId, -useAmount, `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –±–æ–Ω—É—Å—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã`);

        return {
            success: true,
            usedAmount: useAmount,
            remainingAmount: available.totalAmount - useAmount
        };
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    getReferralStatus() {
        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) return null;

        const stats = ReferralStorage.getUserStats(currentUser.id);
        const bonuses = this.getAvailableBonuses(currentUser.id);

        return {
            referralCode: currentUser.referralCode,
            referralLink: this.getReferralLink(currentUser.referralCode),
            stats: stats,
            bonuses: bonuses,
            achievements: this.getUnlockedAchievements(stats.totalReferrals)
        };
    },

    // –ü–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
    getUnlockedAchievements(totalReferrals) {
        return {
            firstReferral: totalReferrals >= 1,
            threeReferrals: totalReferrals >= 3,
            fiveReferrals: totalReferrals >= 5,
            tenReferrals: totalReferrals >= 10,
            discountUnlocked: totalReferrals >= 5,
            freeConsultationUnlocked: totalReferrals >= 10
        };
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
window.ReferralSystem = ReferralSystem;